# R code for species distribution modelling (SDM)
# R_code_sdm.2

#### 2021-01-22 ####
# lecture 15

# not sure if I need this today
# biomes <- read.table("biomes.csv", header=T, sep=",")
# biomes_types <- read.table("biomes_types.csv", header=T, sep=",")install.packages("sdm")
# install.packages("rgdal", dependencies=T)

# install "sdm"
install.packages("sdm")

# load libraries
library(sdm)
library(raster) # predictors
library(rgdal) # species

# import species data
file <- system.file("external/species.shp", package="sdm") 
species <- shapefile(file) # explain to R that we are working with a shape file. Another function is readOGR, which is related to rgdal.. 

# looking at the set
species

# this returns:
	# class = SpatialPointDataFrame
	# features = # of points
	# extent = the max and min eastings and northings
	# crs = the positioning system used (UTM)
	# variable = # of variables

# plot
plot(species)

# each cross is a point
# can change point character
plot(species, pch=17)

# we want to separate the 1 and 0s (occurences from non-occurences)
# looking at the occurrences
species$Occurrence

# we want to plot points with the value 1 (the species is present) as blue
# and points with the value 0 (the species is not present) as re
plot(species[species$Occurrence == 1,],col='blue',pch=17)
points(species[species$Occurrence == 0,],col='red',pch=17)

# "[]" tells R we are making a subset of the data
# "==" tells R "equals"
# "," after 1 ends the query
# "points" adds points to existing plot

# predictors: look at the path (where to find the predictors data)
path <- system.file("external", package="sdm") 

# list the predictors
# he said something about "asc"
lst <- list.files(path=path,pattern='asc$',full.names = T) #
lst

# stack
# we can build  stack of all the predictors in a unique file
# basically layering them, so we can see what the temperature, precipitation, elevation, and vegetation are in each pixel
preds <- stack(lst)

# plot preds
cl <- colorRampPalette(c('blue','orange','red','yellow')) (100)
plot(preds, col=cl)

# plot predictors and occurrences
plot(preds$elevation, col=cl)
points(species[species$Occurrence == 1,], pch=17)
# the species is not a fan of high elevations

plot(preds$temperature, col=cl)
points(species[species$Occurrence == 1,], pch=17)
# it likes high temperatures

plot(preds$precipitation, col=cl)
points(species[species$Occurrence == 1,], pch=17)
# it likes high precipitation

plot(preds$vegetation, col=cl)
points(species[species$Occurrence == 1,], pch=17)
# it lives in places with lots of vegetation (this is an animal, we assume)

# model!

# set the data for the sdm
# explain to R the data we are going to use
# train = training set for building the model (species data set)
# predictors = preds (stacked predictors)
d <- sdmData(train=species, predictors=preds)
d

# returns this
	# class                                 : sdmdata 
	# =========================================================== 
	# number of species                     :  1 
	# species names                         :  Occurrence 
	# number of features                    :  4 
	# feature names                         :  elevation, precipitation, temperature, ... 
	# type                                  :  Presence-Absence 
	# has independet test data?             :  FALSE # are the data independent of each other? Are they totally random? No.
	# number of records                     :  200  # 200 points
	# has Coordinates?                      :  TRUE

# model
# glm = generalized linear model
m1 <- sdm(Occurrence ~ elevation + precipitation + temperature + vegetation, data=d, methods = "glm")

# make the raster output layer
# a prediction, using "predict" function
# we are making this prediction by using the model (m1) and predictors
p1 <- predict(m1, newdata=preds) 

# plot the output
plot(p1, main="prediction", col=cl)
points(species[species$Occurrence == 1,], pch=17)

# ranges from 0 to 1, 0 = blue = we do not expect to find the species there
# 1 = yellow = we fully expect to find the species there

# add to the stack
# we initially created a stack called "preds" and now we want to add plot "p1" to that stack
s1 <- stack(preds,p1)
plot(s1, col=cl)

# how to change name of stack in the plot?


